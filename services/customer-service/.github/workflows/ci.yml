name: Customer Service CI

on:
  push:
    branches: [main, develop]
    paths:
      - 'services/customer-service/**'
  pull_request:
    branches: [main, develop]
    paths:
      - 'services/customer-service/**'

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x' # Use 8.0.x to get the latest patch version

    - name: Restore dependencies
      run: dotnet restore services/customer-service/CustomerService.sln

    - name: Lint (dotnet format)
      run: dotnet format services/customer-service --verify-no-changes --verbosity detailed

    - name: Build
      run: dotnet build services/customer-service/CustomerService.sln --no-restore

    - name: Run Unit Tests
      run: dotnet test services/customer-service/tests/CustomerService.UnitTests/CustomerService.UnitTests.csproj --no-build

    - name: Run Integration Tests
      run: dotnet test services/customer-service/tests/CustomerService.IntegrationTests/CustomerService.IntegrationTests.csproj --no-build

  build-and-push-docker:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./services/customer-service
        file: ./services/customer-service/Dockerfile
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/customer-service:latest
